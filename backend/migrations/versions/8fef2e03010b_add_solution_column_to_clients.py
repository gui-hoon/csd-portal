"""add solution column to clients

Revision ID: 8fef2e03010b
Revises: 93a4c4114f5b
Create Date: 2025-07-03 16:39:53.443800

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '8fef2e03010b'
down_revision: Union[str, Sequence[str], None] = '93a4c4114f5b'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_customers_id'), table_name='customers')
    op.drop_index(op.f('ix_customers_name'), table_name='customers')
    op.drop_table('customers')
    op.add_column('clients', sa.Column('solution', sa.String(), nullable=True))
    op.add_column('clients', sa.Column('is_active', sa.Boolean(), nullable=True))
    op.add_column('clients', sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True))
    op.add_column('clients', sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True))
    op.alter_column('clients', 'manager_name',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('clients', 'manager_email',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('clients', 'manager_phone',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('clients', 'location',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.create_index(op.f('ix_clients_name'), 'clients', ['name'], unique=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_clients_name'), table_name='clients')
    op.alter_column('clients', 'location',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('clients', 'manager_phone',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('clients', 'manager_email',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('clients', 'manager_name',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.drop_column('clients', 'updated_at')
    op.drop_column('clients', 'created_at')
    op.drop_column('clients', 'is_active')
    op.drop_column('clients', 'solution')
    op.create_table('customers',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('solution', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('contract_type', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('license_type', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('license_start', sa.DATE(), autoincrement=False, nullable=False),
    sa.Column('license_end', sa.DATE(), autoincrement=False, nullable=False),
    sa.Column('manager_name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('manager_email', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('manager_phone', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('location', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('memo', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('customers_pkey'))
    )
    op.create_index(op.f('ix_customers_name'), 'customers', ['name'], unique=True)
    op.create_index(op.f('ix_customers_id'), 'customers', ['id'], unique=False)
    # ### end Alembic commands ###
